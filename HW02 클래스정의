//-Animal이라는 기본 클래스를 정의 합니다.
//- Animal 클래스에는 `makeSound()`라는 순수 가상 함수를 포함합니다.
//- Animal 클래스를 상속받아 다양한 동물 클래스를 생성합니다.예) Dog, Cat, Cow
//- 각 클래스에서 makeSound()함수를 재정의하여 해당 동물의 소리를 출력합니다.
//- 메인 함수에서 Animal 타입의 포인터 배열을 선언합니다.
// 
//- 자료형의 변수를 선언하고, 배열에 저장해봅니다.
//- Animal 배열을 반복문으로 순회하면서 각 동물의 울음소리를 내게 합니다.


//필수 기능


#include <iostream>
using namespace std;

//기본 클래스를 Animal로 정의한다.
class Animal {
public:
	//makeSound()라는 순수 가상 함수를 포함한다. 자식 클래스에서 재정의가 가능하다.
	virtual void makeSound() = 0;
};

//자식 클래스로 예시가 아닌 crow, wolf, pig 로 해보겠다.
//자식 클래스로 먼저 crow
class crow : public Animal {
public:
	void makeSound() {//각 클래스에서 makeSound를 재정의하며 소리를 출력한다.
		cout << "crow cries: kkak kkak" << endl;
	}
};

class wolf : public Animal {
public:
	void makeSound() {
		cout << "wolf cries: ahwoooo~" << endl;
	}
};

class pig : public Animal {
public:
	void makeSound() {
		cout << "pig cries: ggulggul" << endl;

	}
};

int main() {
	//crow, wolf, pig 객체를 생성한다.
	
	crow croww;
	wolf wolff;
	pig pigg;

//Animal 타입 포인터 배열을 선언하고 객체 주소를 저장한다.
	Animal* animalss[3];
	animalss[0] = &croww;
	animalss[1] = &wolff;
	animalss[2] = &pigg;
	
	//배열을 반복문으로 순회하면서 각 울음소리를 출력한다.
	for (int i = 0; i < 3; i++) {
		animalss[i]->makeSound();

	}
}




